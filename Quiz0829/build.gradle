plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 웹 애플리케케이션 개발에 필요한 기본적인 의존성 (내장 톰캣 포함)
implementation 'org.springframework.boot:spring-boot-starter-web' 

// 웹 서비스 개발에 필요한 의존성 (SOAP 기반 서비스에 주로 사용)
implementation 'org.springframework.boot:spring-boot-starter-web-services'

// 스프링 부트 애플리케이션 테스트에 필요한 모든 의존성 포함
testImplementation 'org.springframework.boot:spring-boot-starter-test'

// JUnit 5 플랫폼 런처 (테스트 실행에 필요)
testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

// 개발 중 코드 변경 시 애플리케이션을 자동으로 재시작해주는 도구
developmentOnly 'org.springframework.boot:spring-boot-devtools'

// HTML 템플릿 엔진인 타임리프(Thymeleaf)를 사용하기 위한 의존성
implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

// 타임리프 레이아웃을 쉽게 구성하도록 돕는 유틸리티
implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

// JPA(Java Persistence API)를 사용하여 데이터베이스를 다루기 위한 의존성
implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

// 인메모리(in-memory) 관계형 데이터베이스로, 개발 및 테스트용으로 주로 사용
runtimeOnly 'com.h2database:h2'

// JUnit 5 테스트 프레임워크의 API
testImplementation 'org.junit.jupiter:junit-jupiter'


// 롬복(Lombok) 라이브러리: Getter, Setter, 생성자 등을 어노테이션으로 자동 생성
compileOnly 'org.projectlombok:lombok'

// 롬복이 어노테이션을 처리하도록 돕는 프로세서
annotationProcessor 'org.projectlombok:lombok'

// 데이터 유효성 검사(Validation)를 위한 의존성
implementation 'org.springframework.boot:spring-boot-starter-validation'
}

tasks.named('test') {
	useJUnitPlatform()
}
